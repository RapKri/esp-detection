# ESPDet ðŸš€ AGPL-3.0 License

# Parameters
nc: 1 # number of classes
activation: 'nn.ReLU()'
scales: # model compound scaling constants, i.e. 'model=espdetpico.yaml' will call espdet_pico.yaml with scale 'pico'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 512]

# espdet backbone
backbone:  
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2, ]] # 0-P1/2
  - [-1, 1, DSConv, [128, 3, 2]] # 1-P2/4
  - [-1, 1, ESPBlockLite, [256, False]]
  - [-1, 1, DSConv, [256, 3, 2]] # 3-P3/8
  - [-1, 2, DSC3k2, [256, False]]
  - [-1, 1, SCDown, [256, 3, 2]] # 5-P4/16    
  - [-1, 2, DSC3k2, [256, True]]
  - [-1, 1, SCDown, [512, 3, 2]] # 7-P5/32     
  - [-1, 2, DSC3k2, [512, True]]
  - [-1, 1, SPPF, [512, 5]] # 9      
  - [-1, 1, DSConv, [512, 7, 1, 3]] # 10

# espdet head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]              
  - [[-1, 6], 1, Concat, [1]] # cat backbone P4             
  - [-1, 2, ESPBlock, [256, False]] # 13

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]              
  - [[-1, 4], 1, Concat, [1]] # cat backbone P3             
  - [-1, 2, ESPBlock, [128, False]] # 16 (P3/8-small)

  - [-1, 1, DSConv, [128, 3, 2]]                            
  - [[-1, 13], 1, Concat, [1]] # cat head P4                
  - [-1, 2, ESPBlock, [512, False]] # 19 (P4/16-medium)

  - [-1, 1, DSConv, [256, 3, 2]]                             
  - [[-1, 10], 1, Concat, [1]] # cat head P5                
  - [-1, 2, ESPBlock, [512, False]] # 22 (P5/32-large)

  - [[16, 19, 22], 1, ESPDetect, [1]] # ESPDetect(P3, P4, P5)







